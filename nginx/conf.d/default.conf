upstream backends {
        server apache2-1:80;
        server apache2-2:80;
        server apache2-3:80;
}

#server {
#    listen       80;
#    listen  [::]:80;
#    server_name apache;
#
#    location / {
#        proxy_pass http://backends;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Real-IP $remote_addr;
#    }
#}
server {
    listen 80;
    server_name apache;

    # Перенаправление HTTP на HTTPS
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    server_name apache;

    # Путь к SSL сертификатам
    ssl_certificate /etc/nginx/ssl/apache/apache.crt;
    ssl_certificate_key /etc/nginx/ssl/apache/apache.key;

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://backends;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
    }
}



#server {
#    listen       80;
#    listen  [::]:80;
#    server_name elk;
#
#    location / {
#
#        proxy_pass http://kibana:5601;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Real-IP $remote_addr;
#    }
#}
server {
    listen 80;
    server_name elk;

    # Перенаправление HTTP на HTTPS
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    server_name elk;

    # Путь к SSL сертификатам
    ssl_certificate /etc/nginx/ssl/elk/elk.crt;
    ssl_certificate_key /etc/nginx/ssl/elk/elk.key;

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://kibana:5601; # IP адрес внутреннего хоста
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}



#server {
#    listen       80;
#    listen  [::]:80;
#    server_name zabbix;

#    location / {

#        proxy_pass http://zabbix-web:8080;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Real-IP $remote_addr;
#    }
#}
server {
    listen 80;
    server_name zabbix;

    # Перенаправление HTTP на HTTPS
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    server_name zabbix;

    # Путь к SSL сертификатам
    ssl_certificate /etc/nginx/ssl/zabbix/zabbix.crt;
    ssl_certificate_key /etc/nginx/ssl/zabbix/zabbix.key;

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://zabbix-web:8080; # IP адрес внутреннего хоста
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
